name: Deploy Hugo site to Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install Node.js dependencies
        run: |
          echo "Current directory: $PWD"
          echo "Directory contents:"
          ls -la
          if [ ! -f "package.json" ]; then
            echo "Error: package.json not found!"
            exit 1
          fi
          echo "Node version: $(node -v)"
          echo "NPM version: $(npm -v)"
          npm ci || exit 1
          
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 'latest'
          extended: true

      - name: Verify environment
        run: |
          echo "Current directory: $PWD"
          echo "Directory contents:"
          ls -la
          if [ ! -d "themes/hugo-saasify-theme" ]; then
            echo "Error: Theme directory not found!"
            exit 1
          fi
          if [ ! -f "hugo.toml" ]; then
            echo "Error: hugo.toml not found!"
            exit 1
          fi
          echo "Theme directory contents:"
          ls -la themes/hugo-saasify-theme/

      - name: Build with Hugo
        env:
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          echo "Current directory: $PWD"
          echo "Hugo version:"
          hugo version
          echo "Building site..."
          HUGO_OUTPUT=$(hugo --minify --debug 2>&1) || {
            echo "Hugo build failed with output:"
            echo "$HUGO_OUTPUT"
            exit 1
          }
          echo "Build complete. Checking output:"
          if [ ! -d "public" ]; then
            echo "Error: public directory not found after build!"
            exit 1
          fi
          echo "public directory contents:"
          ls -la public/
          if [ ! "$(find public -type f)" ]; then
            echo "Error: public directory is empty!"
            exit 1
          fi
          echo "Files in public directory:"
          find public/ -type f

      - name: Debug artifact
        run: |
          echo "Preparing artifact..."
          if [ ! -d "public" ]; then
            echo "Error: public directory missing before artifact upload!"
            exit 1
          fi
          echo "public directory size:"
          du -sh public/
          echo "public directory structure:"
          tree public/ || find public/ -type f

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3
